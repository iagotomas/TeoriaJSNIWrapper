{
  "name": "accidental-value",
  "version": "1.0.0",
  "description": "The values of accidentals in music",
  "main": "index.js",
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/saebekassebil/accidental-value.git"
  },
  "author": {
    "name": "Jakob Miland",
    "email": "saebekassebil@gmail.com",
    "url": "http://saebekassebil.me"
  },
  "license": "MIT",
  "homepage": "https://github.com/saebekassebil/accidental-value",
  "devDependencies": {
    "tape": "^2.13.3"
  },
  "readme": "# accidental-value\n\nA simple module for parsing chord symbols, both Jazz and Classical.\nParses correctly everything from simple power chords (`D#5`) to chords you'll\noften find in the real book (`G7#5`, `Dm7b5`) to crazy chords like\n`Fsus4maj#11` or `Cm13b5#9`.\n\nNote that this module only parses the chord symbol (that is the part of the\nchord string that does *not* include the root, and thus returns relative\nintervals from which the chord can be constructed with any root.\n\n## usage\n\n```js\nvar accval = require('accidental-value');\n```\n\n### accval(accidental)\n\nReturns the *value* of the accidental from the table below.\nThis is useful for manipulating notes and intervals.\n\n - 'x' = 2\n - '#' = 1\n - '' = 0\n - 'b' = -1\n - 'bb' = -2\n\n### accval.interval(accidental)\n\nReturns the relative interval (given in `[octaves, fifths]` format)\nof the accidental. E.g.:\n```js\naccval.interval('#') // [-4, 7]\naccval.interval('bb') // [8, -14]\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/saebekassebil/accidental-value/issues"
  },
  "_id": "accidental-value@1.0.0",
  "_from": "accidental-value@^1.0.0"
}
